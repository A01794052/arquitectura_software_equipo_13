openapi: 3.0.0
info:
  version: '1.0'
  title: RESTJedi
  description: API para servicios REST de Jedi
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/A01794052/RESTJedi/1.0
paths:
  /users:
    get:
      summary: Obtener todos los usuarios
      tags:
        - Users
      responses:
        '200':
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    - id: 1
                      username: "jdoe"
                      curp: "JDOE800101HDFRRL00"
                      tipo_de_usuario_id: 1
                    - id: 2
                      username: "asmith"
                      curp: "ASM800101HDFRRL00"
                      tipo_de_usuario_id: 2

    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 3
                    username: "newuser"
                    curp: "NEWU800101HDFRRL00"
                    tipo_de_usuario_id: 1

  /users/{id}:
    put:
      summary: Actualizar un usuario por ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 1
                    username: "jdoe_updated"
                    curp: "JDOE800101HDFRRL00"
                    tipo_de_usuario_id: 1

    delete:
      summary: Eliminar un usuario por ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado

  /symptoms:
    get:
      summary: Obtener todos los síntomas
      tags:
        - Symptoms
      responses:
        '200':
          description: Lista de síntomas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Symptom'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    - id: 1
                      username: "jdoe"
                      symptoms: "Fiebre, tos"
                      created_at: "2024-11-01T12:00:00Z"
                      symptom_status_id: 1
                    - id: 2
                      username: "asmith"
                      symptoms: "Dolor de cabeza"
                      created_at: "2024-11-02T08:30:00Z"
                      symptom_status_id: 2

    post:
      summary: Crear un nuevo síntoma
      tags:
        - Symptoms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomInput'
      responses:
        '201':
          description: Síntoma creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symptom'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 3
                    username: "newuser"
                    symptoms: "Náuseas"
                    created_at: "2024-11-03T10:00:00Z"
                    symptom_status_id: 1

  /symptoms/{id}:
    put:
      summary: Actualizar un síntoma por ID
      tags:
        - Symptoms
      parameters:
        - name: id
          in: path
          required: true
          description: ID del síntoma
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomInput'
      responses:
        '200':
          description: Síntoma actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symptom'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 1
                    username: "jdoe"
                    symptoms: "Fiebre, tos persistente"
                    created_at: "2024-11-01T12:00:00Z"
                    symptom_status_id: 2

    delete:
      summary: Eliminar un síntoma por ID
      tags:
        - Symptoms
      parameters:
        - name: id
          in: path
          required: true
          description: ID del síntoma
          schema:
            type: integer
      responses:
        '204':
          description: Síntoma eliminado

  /documents:
    get:
      summary: Obtener todos los documentos
      tags:
        - Documents
      responses:
        '200':
          description: Lista de documentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    - id: 1
                      username: "jdoe"
                      file_path: "/uploads/doc1.pdf"
                      file_name: "doc1.pdf"
                      created_at: "2024-11-01T12:00:00Z"
                    - id: 2
                      username: "asmith"
                      file_path: "/uploads/doc2.pdf"
                      file_name: "doc2.pdf"
                      created_at: "2024-11-02T08:30:00Z"

    post:
      summary: Crear un nuevo documento
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentInput'
      responses:
        '201':
          description: Documento creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 3
                    username: "newuser"
                    file_path: "/uploads/doc3.pdf"
                    file_name: "doc3.pdf"
                    created_at: "2024-11-03T10:00:00Z"

  /documents/{id}:
    put:
      summary: Actualizar un documento por ID
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: ID del documento
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentInput'
      responses:
        '200':
          description: Documento actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 1
                    username: "jdoe"
                    file_path: "/uploads/doc1_updated.pdf"
                    file_name: "doc1_updated.pdf"
                    created_at: "2024-11-01T12:00:00Z"

    delete:
      summary: Eliminar un documento por ID
      tags:
        - Documents
      parameters:
        - name: id
          in: path
          required: true
          description: ID del documento
          schema:
            type: integer
      responses:
        '204':
          description: Documento eliminado

  /recommendations:
    get:
      summary: Obtener todas las recomendaciones
      tags:
        - Recommendations
      responses:
        '200':
          description: Lista de recomendaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    - id: 1
                      recommendation: "Tomar suficiente agua."
                      created_at: "2024-11-01T12:00:00Z"
                      checked: 0
                      symptom_id: 1
                    - id: 2
                      recommendation: "Descansar adecuadamente."
                      created_at: "2024-11-02T08:30:00Z"
                      checked: 1
                      symptom_id: 2

    post:
      summary: Crear una nueva recomendación
      tags:
        - Recommendations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationInput'
      responses:
        '201':
          description: Recomendación creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 3
                    recommendation: "Consultar a un médico."
                    created_at: "2024-11-03T10:00:00Z"
                    checked: 0
                    symptom_id: 1

  /recommendations/{id}:
    put:
      summary: Actualizar una recomendación por ID
      tags:
        - Recommendations
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la recomendación
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationInput'
      responses:
        '200':
          description: Recomendación actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
              examples:
                example-1:
                  summary: Ejemplo de respuesta
                  value:
                    id: 1
                    recommendation: "Aumentar la ingesta de líquidos."
                    created_at: "2024-11-01T12:00:00Z"
                    checked: 1
                    symptom_id: 1

    delete:
      summary: Eliminar una recomendación por ID
      tags:
        - Recommendations
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la recomendación
          schema:
            type: integer
      responses:
        '204':
          description: Recomendación eliminada

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        curp:
          type: string
        tipo_de_usuario_id:
          type: integer

    UserInput:
      type: object
      properties:
        username:
          type: string
        curp:
          type: string
        password:
          type: string
        tipo_de_usuario_id:
          type: integer
      required:
        - username
        - curp
        - password
        
    Symptom:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        symptoms:
          type: string
        created_at:
          type: string
          format: date-time
        symptom_status_id:
          type: integer

    SymptomInput:
      type: object
      properties:
        username:
          type: string
        symptoms:
          type: string
        symptom_status_id:
          type: integer
      required:
        - username
        - symptoms
        - symptom_status_id
        
    Document:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        file_path:
          type: string
        file_name:
          type: string
        created_at:
          type: string
          format: date-time

    DocumentInput:
      type: object
      properties:
        username:
          type: string
        file_path:
          type: string
        file_name:
          type: string
      required:
        - username
        - file_path
        - file_name
        
    Recommendation:
      type: object
      properties:
        id:
          type: integer
        recommendation:
          type: string
        created_at:
          type: string
          format: date-time
        checked:
          type: integer
        symptom_id:
          type: integer

    RecommendationInput:
      type: object
      properties:
        recommendation:
          type: string
        checked:
          type: integer
        symptom_id:
          type: integer
      required:
        - recommendation
        - checked
        - symptom_id